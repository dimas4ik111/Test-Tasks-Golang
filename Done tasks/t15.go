// –ö –∫–∞–∫–∏–º –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–º –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è–º –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç –∫–æ–¥–∞, –∏ –∫–∞–∫ —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å?
// –ü—Ä–∏–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—Ä–∏–º–µ—Ä —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏.

// var justString string

// func someFunc() {

//   v := createHugeString(1 << 10)

//   justString = v[:100]

// }

// func main() {

//   someFunc()

// }

package main

import "fmt"

func createHugeString(n int) string {
	var str string
	for i := 0; i < n; i++ {
		str += "üò¨"
		// str += "lol KEK "
	}
	return str
}

func someFunc(str string) []rune {

	str = createHugeString(1 << 10)

	// create []rune, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å —Å–∏–º–≤–æ–ª—ã –∫–æ—Ç–æ—Ä—ã–µ –≤–µ—Å—è—Ç –±–æ–ª–µ–µ 1 –±–∞–π—Ç–∞
	justString := []rune(str)

	return justString[:100]
}

func main() {
	// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–±–ª–µ–º–æ–π –ø—Ä–∏ –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç–∏
	var justString string

	fmt.Println(string(someFunc(justString)))
}
